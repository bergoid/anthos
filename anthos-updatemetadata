#!/bin/bash

sourceDir=source

# Ensure presence of 'header.inc' for every page
################################################

    # Find all directories containing an 'index.rst' file
    docDirs="$(find "$sourceDir"/ -name 'index.rst' -printf '%h\n')"

    # Loop over this list of directories
    for currentDir in $docDirs
    do

        # Create 'header.inc', if non-existent
        if [ ! -f "$currentDir/header.inc" ];
        then
#            echo ".. :tags: onetag|anothertag" >  "$currentDir/header.inc"
            touch "$currentDir/header.inc"
        fi

    done


# Locate ':browse:' statements and ensure presence of ':browse_root:' for every page in subtree
###############################################################################################

    # for every browsable tree found, determine browse_root
    while read browseRootDir; do

        browse_root="$(echo $browseRootDir | sed "s/^source\///g")"

        # for every header.inc found in the tree:
        while read headerFile; do

            # Check if ':browse_root:' statement already present
            grepOutput="$(grep -n "^\:browse_root\:" "$headerFile")"

            # if present: check if value of :browse_root: is still correct
            if [ "$?" -eq "0" ]; then
                # obtain current value
                browse_root_current="$(echo $grepOutput | cut -d: -f 4- | sed "s/^[ ]*//")"

                # if correct: leave file unchanged
                # if not correct : obtain line number, and update statement
                if [ "$browse_root" != "$browse_root_current" ]; then
                    browse_root_lineno="$(echo "$grepOutput" | cut -d: -f 1)"
                    sed -i "${browse_root_lineno} c :browse_root: $browse_root" $headerFile
                fi

            # if not present: append a ':browse_root:' statement to the end of the file
            else

                echo ":browse_root: $browse_root" >> $headerFile
            fi

        done < <(find "$browseRootDir" -name header.inc)

    done < <(grep -lr "^\:browse\:" $sourceDir | xargs -I{} dirname "{}")
